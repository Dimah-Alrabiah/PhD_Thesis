# Language: R
# Script: 10_IS_expression_analysis
# Description: This script investigates the expression profiles of integration site (IS)-associated genes 
#              by combining log fold change (logFC) and logCPM values for shared and top IS genes.
#              It uses differential gene expression (DGE) results, gene count matrices, and GTF annotations
#              to generate annotated matrices and heatmaps of gene activity.


# 1. Load Required Libraries and Data
```{r}
library(readr)
library(dplyr)
library(tibble)
library(edgeR)
library(rtracklayer)

# Load input files
gene_counts <- read.csv("Ensemble_salmon.merged.gene_counts.csv")
shared_genes_df <- read_csv("Shared_Genes_Counts.csv")
top15_genes_df <- read_csv("Top15_Genes_Integration_Summary.csv")
dge_1 <- read.csv("DGE_Results_Sample1_vs_Control.csv", row.names = 1) %>%
  rownames_to_column("Ensembl_ID") %>%
  select(Ensembl_ID, logFC_1 = logFC)
dge_2 <- read.csv("DGE_Results_Sample2_vs_Control.csv", row.names = 1) %>%
  rownames_to_column("Ensembl_ID") %>%
  select(Ensembl_ID, logFC_2 = logFC)
gtf_data <- import("Annotation.gtf")
```

# 2. Prepare Gene Annotations
```{r}
gtf_df <- as.data.frame(gtf_data)
gtf_genes <- gtf_df %>% filter(type == "gene")

# Extract clean mapping
annotations <- gtf_genes %>%
  filter(!is.na(gene_name)) %>%
  select(Ensembl_ID = gene_id, GeneName = gene_name) %>%
  distinct()
```

# 3. Merge Shared and Top IS Genes with logFC Values
```{r}
merged_logfc <- full_join(dge_1, dge_2, by = "Ensembl_ID") %>%
  left_join(annotations, by = "Ensembl_ID") %>%
  select(Ensembl_ID, GeneName, logFC_1, logFC_2)

shared_merged_df <- shared_genes_df %>%
  left_join(merged_logfc, by = "GeneName")

top15_merged_df <- top15_genes_df %>%
  left_join(merged_logfc, by = "GeneName")
```

# 4. Calculate logCPM and Group Averages
```{r}
counts <- gene_counts[, 3:ncol(gene_counts)]
row.names(counts) <- gene_counts[, 1]
counts <- apply(counts, 2, as.numeric)
colnames(counts) <- paste0("Sample", 1:ncol(counts))

group_labels <- factor(c(rep("Treatment1", 3), rep("Control", 3), rep("Treatment2", 3)))
dge <- DGEList(counts = counts, group = group_labels)
dge <- calcNormFactors(dge)
logCPM_df <- as.data.frame(cpm(dge, log = TRUE))
logCPM_df$Ensembl_ID <- rownames(logCPM_df)

logCPM_annotated <- left_join(logCPM_df, annotations, by = "Ensembl_ID")
logCPM_avg <- logCPM_annotated %>%
  rowwise() %>%
  mutate(
    logCPM_1 = mean(c_across(1:3), na.rm = TRUE),
    logCPM_ctrl = mean(c_across(4:6), na.rm = TRUE),
    logCPM_2 = mean(c_across(7:9), na.rm = TRUE)
  ) %>%
  ungroup() %>%
  select(Ensembl_ID, GeneName, logCPM_1, logCPM_ctrl, logCPM_2)

shared_logCPM <- shared_genes_df %>%
  left_join(logCPM_avg, by = "GeneName") %>%
  filter(if_all(c(logCPM_1, logCPM_ctrl, logCPM_2), ~!is.na(.))) %>%
  mutate(GeneLabel = coalesce(GeneName, Ensembl_ID)) %>%
  select(GeneLabel, logCPM_1, logCPM_ctrl, logCPM_2)
```

# 5. Heatmaps for logCPM
```{r}
library(pheatmap)

# Shared IS Genes
heatmap_all <- shared_logCPM %>%
  column_to_rownames("GeneLabel") %>%
  as.matrix() %>%
  .[apply(., 1, sd, na.rm = TRUE) > 0, ]

pheatmap(heatmap_all, scale = "row", clustering_method = "complete", 
         main = "logCPM Heatmap – All Shared IS Genes")

# Top 15 IS Genes
top15_logCPM <- top15_genes_df %>%
  filter(!grepl("^LOC", GeneName)) %>%
  left_join(logCPM_avg, by = "GeneName") %>%
  mutate(GeneLabel = coalesce(GeneName, Ensembl_ID)) %>%
  select(GeneLabel, logCPM_1, logCPM_ctrl, logCPM_2) %>%
  filter(if_all(everything(), is.finite)) %>%
  column_to_rownames("GeneLabel") %>%
  as.matrix() %>%
  .[apply(., 1, sd, na.rm = TRUE) > 0, ]

if (nrow(top15_logCPM) > 1) {
  pheatmap(top15_logCPM, scale = "row", clustering_method = "complete",
           main = "logCPM Heatmap – Top 15 IS Genes")
}
```

# 6. Heatmaps for logFC
```{r}
# Shared genes with |logFC| > 2
logfc_all <- shared_merged_df %>%
  filter(!is.na(GeneName)) %>%
  filter(abs(logFC_1) > 2 | abs(logFC_2) > 2) %>%
  select(GeneName, logFC_1, logFC_2) %>%
  column_to_rownames("GeneName") %>%
  as.matrix()

pheatmap(logfc_all, scale = "row", main = "logFC Heatmap – Shared IS Genes")

# Top 15 IS Genes
logfc_top15 <- top15_merged_df %>%
  filter(!grepl("^LOC", GeneName)) %>%
  filter(!is.na(logFC_1) & !is.na(logFC_2)) %>%
  select(GeneLabel = GeneName, logFC_1, logFC_2) %>%
  column_to_rownames("GeneLabel") %>%
  as.matrix() %>%
  .[apply(., 1, sd, na.rm = TRUE) > 0, ]

if (nrow(logfc_top15) > 1) {
  pheatmap(logfc_top15, scale = "none", main = "logFC Heatmap – Top 15 IS Genes",
           display_numbers = TRUE, number_format = "%.2f")
}

# Inputs: gene expression matrix, GTF, DGE results
# Outputs: Annotated logFC/logCPM tables and heatmaps for shared and top IS-associated genes

